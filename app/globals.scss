@use '../styles/base' as *;
@tailwind base;
@tailwind components;
@tailwind utilities;
@layer base {
  html {
    @apply text-white;
    @apply bg-black;
  }
}



:root {
  --border-radius: 12px;
  --font-mono: ui-monospace, Menlo, Monaco, "Cascadia Mono", "Segoe UI Mono",
    "Roboto Mono", "Oxygen Mono", "Ubuntu Monospace", "Source Code Pro",
    "Fira Mono", "Droid Sans Mono", "Courier New", monospace;

    --callout-rgb: rgba(20, 20, 20);
    --callout-border-rgb: rgba(108, 108, 108);
  
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: #000;
  --background-end-rgb: #020613;

  --primary-glow: conic-gradient(
    from 180deg at 50% 50%,
    #16abff33 0deg,
    #0885ff33 55deg,
    #54d6ff33 120deg,
    #0071ff33 160deg,
    transparent 360deg
  );
  --secondary-glow: radial-gradient(
    rgba(255, 255, 255, 1),
    rgba(255, 255, 255, 0)
  );

  --tile-start-rgb: 239, 245, 249;
  --tile-end-rgb: 228, 232, 233;
  --tile-border: conic-gradient(
    #00000080,
    #00000040,
    #00000030,
    #00000020,
    #00000010,
    #00000010,
    #00000080
  );

  --callout-rgb: 238, 240, 241;
  --callout-border-rgb: 172, 175, 176;
  --card-rgb: 180, 185, 188;
  --card-border-rgb: 131, 134, 135;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: #000;
    --background-end-rgb: #020613;

    --primary-glow: radial-gradient(rgba(203, 51, 227, 0.418), rgba(1, 65, 255, 0));
    --secondary-glow: linear-gradient(
      to bottom right,
      rgba(1, 65, 255, 0),
      rgba(1, 65, 255, 0),
      rgba(251, 1, 255, 0.291)
    );

    --tile-start-rgb: 2, 13, 46;
    --tile-end-rgb: 2, 5, 19;
    --tile-border: conic-gradient(
      #ffffff80,
      #ffffff40,
      #ffffff30,
      #ffffff20,
      #ffffff10,
      #ffffff10,
      #ffffff80
    );

    --callout-rgb: 20, 20, 20;
    --callout-border-rgb: 108, 108, 108;
    --card-rgb: 100, 100, 100;
    --card-border-rgb: 200, 200, 200;

    --primary: #F13CF3;
  }
}

*, ::after, ::before,html, body {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

body {
  color: rgb(var(--foreground-rgb));
  overflow-x: hidden;
 
}
p {
  display: inline-block;
  max-width: 50vw;
  width: inherit;
}

.bg {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100vh;
 /*  background-image: url('/Background.png'); */
  background-position: center 150%;
  object-fit: cover;
  object-position: center;
  background-size: 100%;
  opacity: 0.085;
  z-index: -1;
  background: linear-gradient(
    to bottom,
    rgb(var(--background-start-rgb))
  )
  rgb(var(--background-end-rgb));

  font-family: var(--font-inter);
}




a {
  color: inherit;
  text-decoration: none;
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}


.componentNav {
  position: absolute;
  top: 2vh;
  left: auto;
  right: 2vw;
  z-index: 1000;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;

  @media screen and (max-width: 768px) {
      position: fixed;
      background-color: black;
      border-radius: 10px;
  }

  li {
      position: relative;
      margin: 0;
      padding: 1rem;
      background-color:  rgba(var(--callout-rgb), 0.5);
      border: 1px solid rgba(var(--card-border-rgb), 0.3);
      border-radius: 12px;
      min-width: 300px;
    }

  a {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 0.5rem;
      pointer-events: auto;
    }

      .desc {
          font-weight: 700;
          font-family: monospace;
        }
        
        .desc:hover {
          background-color: rgba(var(--callout-rgb), 0.1) !important;
          border: 1px solid rgba(var(--card-border-rgb), 0.25);
        }
}

.title {
  text-align: center;
  width: 100%;
  font-family: var(--font-space_grotesk);
  font-size: clamp(3rem, 0.75rem + 5vw, 6rem);
}

.title2 {
  font-family: var(--font-space_grotesk);
  font-size: clamp(2.5rem, 0.75rem + 5vw, 5rem);
}


#leva__root {
  position: absolute !important;
  visibility: hidden;
  pointer-events: none;
}

.settings {
  position: absolute;
  width: 36px;
  height: 36px;
  left: 2vw;
  top: 20vh;
  cursor: pointer;
  border: none;
  border-radius: 5px;
  filter: drop-shadow(0 0 5px 8px #ae89f4);
  transition: transform 0.3s ease; 
  z-index: 10000;
  pointer-events: auto;
}

.text {
  position: fixed;
 font-size: 1rem;
  left: 4vw;
  top: 8vh;
  cursor: pointer;
  border: none;
}

.settings:hover {
  animation: rotate 10s linear infinite; 
}

@keyframes rotate {
  from {
    transform: rotate(0deg); 
  }
  to {
    transform: rotate(360deg); 
  }
}

canvas {
  position: absolute;
  pointer-events: none;
}